<?xml version="1.0" encoding="UTF-8"?>
<project name="module_someplaygrounds" default="compile.module.someplaygrounds">
  <dirname property="module.someplaygrounds.basedir" file="${ant.file.module_someplaygrounds}"/>
  
  <property name="module.jdk.home.someplaygrounds" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.someplaygrounds" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.someplaygrounds" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.someplaygrounds" value="-encoding UTF-8 -source 8 -target 8 ${compiler.args}"/>
  
  <property name="someplaygrounds.output.dir" value="${module.someplaygrounds.basedir}/out/production/SomePlaygrounds"/>
  <property name="someplaygrounds.testoutput.dir" value="${module.someplaygrounds.basedir}/out/test/SomePlaygrounds"/>
  
  <path id="someplaygrounds.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="someplaygrounds.module.production.classpath">
    <path refid="${module.jdk.classpath.someplaygrounds}"/>
    <pathelement location="${idea.home}/lib/groovy-all-2.4.15.jar"/>
    <pathelement location="${path.variable.maven_repository}/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar"/>
    <pathelement location="${path.variable.maven_repository}/org/junit/jupiter/junit-jupiter-api/5.3.1/junit-jupiter-api-5.3.1.jar"/>
    <pathelement location="${path.variable.maven_repository}/org/junit/platform/junit-platform-commons/1.3.1/junit-platform-commons-1.3.1.jar"/>
    <pathelement location="${path.variable.maven_repository}/org/opentest4j/opentest4j/1.1.1/opentest4j-1.1.1.jar"/>
    <path refid="library.guava-26.0-jre.classpath"/>
    <pathelement location="${basedir}/lib/guava-26.0-jre.jar"/>
  </path>
  
  <path id="someplaygrounds.runtime.production.module.classpath">
    <pathelement location="${someplaygrounds.output.dir}"/>
    <pathelement location="${idea.home}/lib/groovy-all-2.4.15.jar"/>
    <pathelement location="${path.variable.maven_repository}/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar"/>
    <pathelement location="${path.variable.maven_repository}/org/junit/jupiter/junit-jupiter-api/5.3.1/junit-jupiter-api-5.3.1.jar"/>
    <pathelement location="${path.variable.maven_repository}/org/junit/platform/junit-platform-commons/1.3.1/junit-platform-commons-1.3.1.jar"/>
    <pathelement location="${path.variable.maven_repository}/org/opentest4j/opentest4j/1.1.1/opentest4j-1.1.1.jar"/>
    <path refid="library.guava-26.0-jre.classpath"/>
    <pathelement location="${basedir}/lib/guava-26.0-jre.jar"/>
  </path>
  
  <path id="someplaygrounds.module.classpath">
    <path refid="${module.jdk.classpath.someplaygrounds}"/>
    <pathelement location="${someplaygrounds.output.dir}"/>
    <pathelement location="${idea.home}/lib/groovy-all-2.4.15.jar"/>
    <pathelement location="${path.variable.maven_repository}/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar"/>
    <pathelement location="${path.variable.maven_repository}/org/junit/jupiter/junit-jupiter-api/5.3.1/junit-jupiter-api-5.3.1.jar"/>
    <pathelement location="${path.variable.maven_repository}/org/junit/platform/junit-platform-commons/1.3.1/junit-platform-commons-1.3.1.jar"/>
    <pathelement location="${path.variable.maven_repository}/org/opentest4j/opentest4j/1.1.1/opentest4j-1.1.1.jar"/>
    <path refid="library.guava-26.0-jre.classpath"/>
    <pathelement location="${basedir}/lib/guava-26.0-jre.jar"/>
  </path>
  
  <path id="someplaygrounds.runtime.module.classpath">
    <pathelement location="${someplaygrounds.testoutput.dir}"/>
    <pathelement location="${someplaygrounds.output.dir}"/>
    <pathelement location="${idea.home}/lib/groovy-all-2.4.15.jar"/>
    <pathelement location="${path.variable.maven_repository}/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar"/>
    <pathelement location="${path.variable.maven_repository}/org/junit/jupiter/junit-jupiter-api/5.3.1/junit-jupiter-api-5.3.1.jar"/>
    <pathelement location="${path.variable.maven_repository}/org/junit/platform/junit-platform-commons/1.3.1/junit-platform-commons-1.3.1.jar"/>
    <pathelement location="${path.variable.maven_repository}/org/opentest4j/opentest4j/1.1.1/opentest4j-1.1.1.jar"/>
    <path refid="library.guava-26.0-jre.classpath"/>
    <pathelement location="${basedir}/lib/guava-26.0-jre.jar"/>
  </path>
  
  
  <patternset id="excluded.from.module.someplaygrounds">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.someplaygrounds">
    <patternset refid="excluded.from.module.someplaygrounds"/>
  </patternset>
  
  <path id="someplaygrounds.module.sourcepath">
    <dirset dir="${module.someplaygrounds.basedir}">
      <include name="src"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.someplaygrounds" depends="compile.module.someplaygrounds.production,compile.module.someplaygrounds.tests" description="Compile module SomePlaygrounds"/>
  
  <target name="compile.module.someplaygrounds.production" depends="register.custom.compilers" description="Compile module SomePlaygrounds; production classes">
    <mkdir dir="${someplaygrounds.output.dir}"/>
    <javac2 destdir="${someplaygrounds.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.someplaygrounds}/javac">
      <compilerarg line="${compiler.args.someplaygrounds}"/>
      <bootclasspath refid="someplaygrounds.module.bootclasspath"/>
      <classpath refid="someplaygrounds.module.production.classpath"/>
      <src refid="someplaygrounds.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.someplaygrounds"/>
    </javac2>
    
    <copy todir="${someplaygrounds.output.dir}">
      <fileset dir="${module.someplaygrounds.basedir}/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.someplaygrounds.tests" depends="register.custom.compilers,compile.module.someplaygrounds.production" description="compile module SomePlaygrounds; test classes" unless="skip.tests"/>
  
  <target name="clean.module.someplaygrounds" description="cleanup module">
    <delete dir="${someplaygrounds.output.dir}"/>
    <delete dir="${someplaygrounds.testoutput.dir}"/>
  </target>
</project>